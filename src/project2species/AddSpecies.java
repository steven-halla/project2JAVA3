package project2species;
import java.awt.Color;
import javax.swing.JOptionPane;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Class        AddPerson.java
 * Description  A class used to both add and edit a person into the DB.
 * Course       CS 143
 * Hourse       1 hours and 12 minutes
 * Date         5/1/2021
  History Log   7/18/2018, 5/7/2020, 4/5/2021
 * @author	<i>Niko Culevski</i>
 * @version 	%1% %2%
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class AddSpecies extends javax.swing.JDialog
{
    // class instance variables
   private Species mySpecies = null;
    private String name;
    private String genus;
    private int population;
    private String habitat;
    private String predators;

    private String diet;
    private final Color white = Color.WHITE; // Default background color for input textfield
    private final Color pink = Color.PINK;
     // Background color for bad input textfield
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Constructor  AddPerson()--default constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Add Person.
     * Date         4/5/2021
     * History Log  7/18/2018, 5/7/2020
     * @author      <i>Niko Culevski</i>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    public AddSpecies()
    {
        initComponents();
        // Center the form
        this.setLocationRelativeTo(null);        
        // Set the default button
        this.getRootPane().setDefaultButton(addJButton);   
        // Center the form
        addJButton.setText("Edit");
        // Set the modal to true
        setModal(true);        
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Constructor  AddPerson()--overloaded constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Edit Person.
     * Date         4/5/2021
     * History Log  7/18/2018, 5/7/2020
     * @author      <i>Niko Culevski</i>
     * @param       friend Person
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public AddSpecies(Species species) {
    this(); // Call default constructor to build GUI
    mySpecies = species;
    nameJTextField.setText(species.getName());
    genusJTextField.setText(species.getGenus());
    populationJTextField.setText(String.valueOf(species.getPopulation()));
    dietJTextField.setText(species.getDiet());
    habitatJTextField.setText(species.getHabitat());
    predatorsJTextField.setText(species.getPredators()); // Adding predators field

    titleJLabel.setText("Edit Species");
}

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Constructor  AddPerson()--overloaded constructor
     * Description  Create an instance of the GUI form and sets icon image.
     *              Used for Edit Person.
     * Date         4/5/2021
     * History Log  7/18/2018, 5/7/2020
     * @author      <i>Niko Culevski</i>
     * @param       parent Frame
     * @param       modal  boolean
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public AddSpecies(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        // Center the form
        this.setLocationRelativeTo(null);        
        // Set the default button
        this.getRootPane().setDefaultButton(addJButton);                        
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method:      getPerson()
     * Description: Returns the person added or edited.
     * Date:        5/12/16
     * @author      Niko Culevski
     * @return      Person
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public Species getSpecies()
    {
        return mySpecies;
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        firstJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        lastJLabel = new javax.swing.JLabel();
        genusJTextField = new javax.swing.JTextField();
        ageJLabel = new javax.swing.JLabel();
        populationJTextField = new javax.swing.JTextField();
        addressJLabel = new javax.swing.JLabel();
        dietJTextField = new javax.swing.JTextField();
        cityJLabel = new javax.swing.JLabel();
        habitatJTextField = new javax.swing.JTextField();
        controlJPanel = new javax.swing.JPanel();
        addJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        predatorsJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Employee Add Form");
        setType(java.awt.Window.Type.UTILITY);

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 30)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(0, 102, 102));
        titleJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/address_small.jpg"))); // NOI18N
        titleJLabel.setText("Add Person");

        displayJPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        displayJPanel.setLayout(new java.awt.GridLayout(7, 2, 3, 3));

        firstJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        firstJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstJLabel.setText("Name of Species:");
        displayJPanel.add(firstJLabel);

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(nameJTextField);

        lastJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lastJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastJLabel.setText("Genus:");
        displayJPanel.add(lastJLabel);

        genusJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genusJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        genusJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                genusJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                genusJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(genusJTextField);

        ageJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ageJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageJLabel.setText("Population:");
        displayJPanel.add(ageJLabel);

        populationJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        populationJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        populationJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                populationJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                populationJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(populationJTextField);

        addressJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addressJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressJLabel.setText("Diet:");
        displayJPanel.add(addressJLabel);

        dietJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dietJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        displayJPanel.add(dietJTextField);

        cityJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cityJLabel.setText("Habitat:");
        displayJPanel.add(cityJLabel);

        habitatJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        habitatJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        habitatJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                habitatJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                habitatJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(habitatJTextField);

        controlJPanel.setLayout(new java.awt.GridLayout(1, 2, 3, 3));

        addJButton.setBackground(new java.awt.Color(255, 255, 204));
        addJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addJButton.setMnemonic('A');
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(addJButton);

        quitJButton.setBackground(new java.awt.Color(255, 255, 204));
        quitJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(quitJButton);

        jLabel1.setText("Predators:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(predatorsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(titleJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(predatorsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(102, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       quitJButtonActionPerformed()
     * Description  Dispose the Add form. Uses the Validation class to
     *              validate input fields.
     * Date         4/26/2021
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_quitJButtonActionPerformed
    {//GEN-HEADEREND:event_quitJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_quitJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       addJButtonActionPerformed()
     * Description  Add new person.
     * Date         4/26/2021
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addJButtonActionPerformed
    {//GEN-HEADEREND:event_addJButtonActionPerformed
      String message = "Error!";
try
{
    // Get the species name and check to see if it is valid
    name = nameJTextField.getText();
    if (!Validation.isLettersOnly(name))
    {
        message = "Please enter a valid name for the species.";
        nameJTextField.requestFocus();
        throw new IllegalArgumentException();
    }

    // Get the genus and check to see if it is valid
    genus = genusJTextField.getText();
    if (!Validation.isLettersOnly(genus))
    {
        message = "Please enter a valid genus for the species.";
        genusJTextField.requestFocus();
        throw new IllegalArgumentException();
    }

    // Get the population and check to see if it is valid
    if (!Validation.isNumeric(populationJTextField.getText()) || Integer.parseInt(populationJTextField.getText()) < 0)
    {
        message = "Please enter a valid integer population for the species.";
        populationJTextField.requestFocus();
        throw new IllegalArgumentException();
    }
    population = Integer.parseInt(populationJTextField.getText());

    // Get the diet
    diet = dietJTextField.getText();

    // Get the habitat and check to see if it is valid
    habitat = habitatJTextField.getText();
    if (!Validation.isLettersOnly(habitat))
    {
        message = "Please enter a valid habitat for the species.";
        habitatJTextField.requestFocus();
        throw new IllegalArgumentException();
    }

    // Get the predators
    predators = predatorsJTextField.getText();

    // Create a new species and set the species' information
    mySpecies = new Species(name, genus, population, diet, habitat, predators);

    // Close the form
    this.dispose();
}
catch (IllegalArgumentException exp)
{
    JOptionPane.showMessageDialog(null, message, "Invalid Input", JOptionPane.ERROR_MESSAGE);
}
catch (Exception exp)
{
    // Show unusual error message
    throw new RuntimeException("Error reading input.");
}

    }//GEN-LAST:event_addJButtonActionPerformed

   /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       firstJTextFieldFocusGained()
     * Description  Highlight firstJTextFieldFocusGained as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_nameJTextFieldFocusGained
    {//GEN-HEADEREND:event_nameJTextFieldFocusGained
        nameJTextField.selectAll();
    }//GEN-LAST:event_nameJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       firstJTextFieldFocusLost()
     * Description  Change color of firstJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_nameJTextFieldFocusLost
    {//GEN-HEADEREND:event_nameJTextFieldFocusLost
        String input = nameJTextField.getText();
        if(Validation.isValidName(input))
            nameJTextField.setBackground(white);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       lastJTextFieldFocusGained()
     * Description  Highlight lastJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void genusJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_genusJTextFieldFocusGained
    {//GEN-HEADEREND:event_genusJTextFieldFocusGained
        genusJTextField.selectAll();
    }//GEN-LAST:event_genusJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       lastJTextFieldFocusLost()
     * Description  Change color of lastJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void genusJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_genusJTextFieldFocusLost
    {//GEN-HEADEREND:event_genusJTextFieldFocusLost
        String input = genusJTextField.getText();
        if(Validation.isValidName(input))
            genusJTextField.setBackground(white);
        else
            genusJTextField.setBackground(pink);
    }//GEN-LAST:event_genusJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       ageJTextFieldFocusGained()
     * Description  Highlight ageJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void populationJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_populationJTextFieldFocusGained
    {//GEN-HEADEREND:event_populationJTextFieldFocusGained
        populationJTextField.selectAll();
    }//GEN-LAST:event_populationJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       ageJTextFieldFocusLost()
     * Description  Change color of lastJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void populationJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_populationJTextFieldFocusLost
    {//GEN-HEADEREND:event_populationJTextFieldFocusLost
        String input = populationJTextField.getText();
        if(Validation.isInteger(input, 5, 140))     //valid age: [5,140]
            populationJTextField.setBackground(white);
        else
            populationJTextField.setBackground(pink);
    }//GEN-LAST:event_populationJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       cityJTextFieldFocusGained()
     * Description  Highlight cityJTextField as focus is gained.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void habitatJTextFieldFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_habitatJTextFieldFocusGained
    {//GEN-HEADEREND:event_habitatJTextFieldFocusGained
        habitatJTextField.selectAll();
    }//GEN-LAST:event_habitatJTextFieldFocusGained
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method       cityJTextFieldFocusLost()
     * Description  Change color of cityJTextField according to valid input.
     * @parem       java.awt.event.FocusEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/5/2021
     * History log  8/24/2016, 4/3/2020
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void habitatJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_habitatJTextFieldFocusLost
    {//GEN-HEADEREND:event_habitatJTextFieldFocusLost
        String input = habitatJTextField.getText();
        if(Validation.isValidName(input))
            habitatJTextField.setBackground(white);
        else
            habitatJTextField.setBackground(pink);
    }//GEN-LAST:event_habitatJTextFieldFocusLost

    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Method       predatorsJTextFieldFocusGained()
 * Description  Highlight predatorsJTextField as focus is gained.
 * @param       java.awt.event.FocusEvent
 * @author      <i>Niko Culevski</i>
 * Date         4/5/2021
 * History log  8/24/2016, 4/3/2020
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
private void predatorsJTextFieldFocusGained(java.awt.event.FocusEvent evt)                                              
{                                                  
    predatorsJTextField.selectAll();
}                                             

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Method       predatorsJTextFieldFocusLost()
 * Description  Change color of predatorsJTextField according to valid input.
 * @param       java.awt.event.FocusEvent
 * @author      <i>Niko Culevski</i>
 * Date         4/5/2021
 * History log  8/24/2016, 4/3/2020
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
private void predatorsJTextFieldFocusLost(java.awt.event.FocusEvent evt)                                            
{                                                
    String input = predatorsJTextField.getText();
    if (Validation.isValidName(input))
        predatorsJTextField.setBackground(white);
    else
        predatorsJTextField.setBackground(pink);
}    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JLabel ageJLabel;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JTextField dietJTextField;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JLabel firstJLabel;
    private javax.swing.JTextField genusJTextField;
    private javax.swing.JTextField habitatJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lastJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTextField populationJTextField;
    private javax.swing.JTextField predatorsJTextField;
    private javax.swing.JButton quitJButton;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
}
